# Production Configuration for Ambulance Booking System
# This profile is optimized for Docker/Production deployment

# Application name
spring.application.name=ambulance-booking-system

# Database Configuration (using environment variables)
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/ambulance_booking}
spring.datasource.username=${DATASOURCE_USERNAME:postgres}
spring.datasource.password=${DATASOURCE_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.open-in-view=false

# JWT Configuration
spring.jwt.secret=${JWT_SECRET:change-this-secret-in-production}

# Logging Configuration
logging.level.com.ambulancebooking=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate=WARN
logging.level.root=WARN

# Server Configuration
server.port=8080
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Error handling
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# Google Maps API
google.maps.api.key=${GOOGLE_DISTANCE_MATRIX_API:your-api-key}

# Frontend URL for CORS
frontend.url=${FRONTEND_URL:http://localhost:3000}

# Actuator endpoints for health checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when_authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Security headers
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
